---
import Eye from '@lucide/astro/icons/eye'
import Plus from '@lucide/astro/icons/plus'

type Props = {
  id: string
  title: string
  artist: string
  year: string
  genre: string
  thumb?: string
  gradientColors?: string
  viewMode?: 'grid' | 'list'
  country?: string
  label?: string
  format?: string
  tracklist?: Array<{ position: string; title: string; duration?: string }>
  notes?: string
}

const {
  id,
  title,
  artist,
  year,
  genre,
  thumb,
  gradientColors = 'from-orange-500 to-orange-600',
  viewMode = 'grid',
  country,
  label,
  format,
  tracklist,
  notes,
} = Astro.props

const initials = `${artist.charAt(0)}${title.charAt(0)}`.toUpperCase()
---

<div id={`vinyl-card-${id}`} data-vinyl-id={id}>
  {
    viewMode === 'grid' ? (
      <div
        class="group overflow-hidden rounded-lg bg-white shadow-sm transition-shadow hover:shadow-md dark:bg-neutral-800"
        data-vinyl-data={JSON.stringify({
          id,
          title,
          artist,
          year,
          genre,
          thumb,
          country,
          label,
          format,
          tracklist,
          notes,
        })}
      >
        <div class="aspect-square overflow-hidden">
          {thumb ? (
            <img
              src={thumb}
              alt={title}
              class="h-full w-full object-cover transition-transform group-hover:scale-105"
            />
          ) : (
            <div
              class={`flex h-full w-full items-center justify-center bg-gradient-to-br ${gradientColors}`}
            >
              <span class="text-2xl font-bold text-white">{initials}</span>
            </div>
          )}
        </div>
        <div class="p-4">
          <h3 class="line-clamp-2 font-semibold text-neutral-900 dark:text-white">{title}</h3>
          <p class="text-sm text-neutral-600 dark:text-neutral-400">{artist}</p>
          <p class="mt-1 text-xs text-neutral-500 dark:text-neutral-500">
            {year} • {genre}
          </p>
          <div class="mt-3 flex gap-2">
            <button
              class="flex flex-1 items-center justify-center gap-2 rounded-lg bg-neutral-100 py-2 text-xs font-medium text-neutral-700 transition-colors hover:bg-neutral-200 dark:bg-neutral-700 dark:text-neutral-300 dark:hover:bg-neutral-600"
              data-vinyl-id={id}
              data-action="view"
            >
              <Eye class="h-4 w-4" />
              Voir
            </button>
            <button
              class="flex flex-1 items-center justify-center gap-2 rounded-lg bg-orange-600 py-2 text-xs font-medium text-white transition-colors hover:bg-orange-700"
              data-vinyl-id={id}
              data-action="add"
            >
              <Plus class="h-4 w-4" />
              Ajouter
            </button>
          </div>
        </div>
      </div>
    ) : (
      <div
        class="flex items-center gap-4 rounded-lg bg-white p-4 shadow-sm transition-shadow hover:shadow-md dark:bg-neutral-800"
        data-vinyl-data={JSON.stringify({
          id,
          title,
          artist,
          year,
          genre,
          thumb,
          country,
          label,
          format,
          tracklist,
          notes,
        })}
      >
        <div class="h-16 w-16 flex-shrink-0 overflow-hidden rounded-lg">
          {thumb ? (
            <img src={thumb} alt={title} class="h-full w-full object-cover" />
          ) : (
            <div
              class={`flex h-full w-full items-center justify-center bg-gradient-to-br ${gradientColors}`}
            >
              <span class="text-lg font-bold text-white">{initials}</span>
            </div>
          )}
        </div>
        <div class="min-w-0 flex-1">
          <h3 class="truncate font-semibold text-neutral-900 dark:text-white">{title}</h3>
          <p class="truncate text-sm text-neutral-600 dark:text-neutral-400">{artist}</p>
          <p class="text-xs text-neutral-500 dark:text-neutral-500">
            {year} • {genre}
          </p>
        </div>
        <div class="flex gap-2">
          <button
            class="flex items-center gap-2 rounded-lg bg-neutral-100 px-3 py-2 text-xs font-medium text-neutral-700 transition-colors hover:bg-neutral-200 dark:bg-neutral-700 dark:text-neutral-300 dark:hover:bg-neutral-600"
            data-vinyl-id={id}
            data-action="view"
          >
            <Eye class="h-4 w-4" />
            Voir
          </button>
          <button
            class="flex items-center gap-2 rounded-lg bg-orange-600 px-3 py-2 text-xs font-medium text-white transition-colors hover:bg-orange-700"
            data-vinyl-id={id}
            data-action="add"
          >
            <Plus class="h-4 w-4" />
            Ajouter
          </button>
        </div>
      </div>
    )
  }
</div>

<script>
  // Gérer les clics sur les boutons d'action
  document.addEventListener('click', (event) => {
    const target = event.target
    if (!target || !(target instanceof Element)) return
    const button = target.closest('[data-action]')

    if (!button) return

    const action = button.getAttribute('data-action')
    const vinylId = button.getAttribute('data-vinyl-id')

    if (!action || !vinylId) return

    // Récupérer les données du vinyle depuis l'élément parent
    const vinylCard = button.closest('[data-vinyl-data]')
    if (!vinylCard) return

    try {
      const vinylData = JSON.parse(vinylCard.getAttribute('data-vinyl-data') || '{}')

      if (action === 'view') {
        // Ouvrir la modal avec les détails du vinyle
        document.dispatchEvent(new CustomEvent('update-vinyl-modal', { detail: vinylData }))
        document.dispatchEvent(new CustomEvent('open-vinylModal'))
      } else if (action === 'add') {
        // Ajouter à la collection (logique à implémenter)
        console.log('Ajouter à la collection:', vinylData)
      }
    } catch (error) {
      console.error("Erreur lors du traitement de l'action:", error)
    }
  })
</script>
