---
import Modal from './ui/Modal.astro'
import Button from './ui/Button.astro'
import Plus from '@lucide/astro/icons/plus'

type VinylData = {
  id: string
  title: string
  artist: string
  year: string
  genre: string | string[]
  thumb?: string
  country?: string
  label?: string
  format?: string
  tracklist?: Array<{ position: string; title: string; duration?: string }>
  notes?: string
}
---

<Modal id="vinylModal" title="Détails du Vinyle">
  <div id="vinyl-content">
    <!-- Template pour le contenu du vinyle -->
    <template id="vinyl-template">
      <div class="space-y-6">
        <!-- Image et infos principales -->
        <div class="flex gap-6">
          <div class="flex-shrink-0">
            <div
              id="vinyl-image"
              class="flex h-48 w-48 items-center justify-center rounded-lg bg-gradient-to-br from-orange-500 to-orange-600 shadow-md"
            >
              <span id="vinyl-initials" class="text-4xl font-bold text-neutral-100">??</span>
            </div>
          </div>
          <div class="flex-1 space-y-4">
            <div>
              <h3
                id="vinyl-title"
                class="text-2xl font-bold text-neutral-900 dark:text-neutral-100"
              >
                Titre
              </h3>
              <p id="vinyl-artist" class="text-lg text-neutral-600 dark:text-neutral-400">
                Artiste
              </p>
            </div>

            <div class="grid grid-cols-1 gap-3 sm:grid-cols-2">
              <div
                id="vinyl-year-card"
                class="hidden items-center gap-2 rounded-lg bg-neutral-50 p-3 dark:bg-neutral-700"
              >
                <svg
                  class="h-4 w-4 text-orange-600 dark:text-orange-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                  ></path>
                </svg>
                <div>
                  <p class="text-xs font-medium text-neutral-500 dark:text-neutral-400">Année</p>
                  <p
                    id="vinyl-year"
                    class="text-sm font-semibold text-neutral-900 dark:text-neutral-100"
                  >
                    2024
                  </p>
                </div>
              </div>

              <div
                id="vinyl-genre-card"
                class="hidden items-center gap-2 rounded-lg bg-neutral-50 p-3 dark:bg-neutral-700"
              >
                <svg
                  class="h-4 w-4 text-orange-600 dark:text-orange-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"
                  ></path>
                </svg>
                <div>
                  <p class="text-xs font-medium text-neutral-500 dark:text-neutral-400">Genre</p>
                  <p
                    id="vinyl-genre"
                    class="text-sm font-semibold text-neutral-900 dark:text-neutral-100"
                  >
                    Genre
                  </p>
                </div>
              </div>

              <div
                id="vinyl-country-card"
                class="hidden items-center gap-2 rounded-lg bg-neutral-50 p-3 dark:bg-neutral-700"
              >
                <svg
                  class="h-4 w-4 text-orange-600 dark:text-orange-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  ></path>
                </svg>
                <div>
                  <p class="text-xs font-medium text-neutral-500 dark:text-neutral-400">Pays</p>
                  <p
                    id="vinyl-country"
                    class="text-sm font-semibold text-neutral-900 dark:text-neutral-100"
                  >
                    Pays
                  </p>
                </div>
              </div>

              <div
                id="vinyl-label-card"
                class="hidden items-center gap-2 rounded-lg bg-neutral-50 p-3 dark:bg-neutral-700"
              >
                <svg
                  class="h-4 w-4 text-orange-600 dark:text-orange-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"
                  ></path>
                </svg>
                <div>
                  <p class="text-xs font-medium text-neutral-500 dark:text-neutral-400">Label</p>
                  <p
                    id="vinyl-label"
                    class="text-sm font-semibold text-neutral-900 dark:text-neutral-100"
                  >
                    Label
                  </p>
                </div>
              </div>
            </div>

            <div
              id="vinyl-format-card"
              class="hidden rounded-lg bg-neutral-50 p-3 dark:bg-neutral-700"
            >
              <p class="text-sm font-medium text-neutral-900 dark:text-neutral-100">Format</p>
              <p id="vinyl-format" class="text-sm text-neutral-600 dark:text-neutral-400">Format</p>
            </div>
          </div>
        </div>

        <!-- Tracklist -->
        <div id="vinyl-tracklist-section" class="hidden">
          <h4
            class="mb-4 flex items-center gap-2 text-lg font-semibold text-neutral-900 dark:text-neutral-100"
          >
            <svg
              class="h-5 w-5 text-orange-600 dark:text-orange-400"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"
              ></path>
            </svg>
            <span id="vinyl-tracklist-title">Tracklist</span>
          </h4>
          <div id="vinyl-tracklist" class="max-h-64 space-y-1 overflow-y-auto">
            <!-- Les pistes seront ajoutées ici -->
          </div>

          <!-- Template pour une piste -->
          <template id="track-template">
            <div
              class="group flex items-center justify-between rounded-lg bg-neutral-50 p-3 transition-colors hover:bg-neutral-100 dark:bg-neutral-700 dark:hover:bg-neutral-600"
            >
              <div class="flex min-w-0 flex-1 items-center gap-3">
                <span
                  class="track-position flex-shrink-0 rounded-full bg-orange-100 px-2 py-1 text-xs font-bold text-orange-600 dark:bg-orange-900/30 dark:text-orange-400"
                  >A1</span
                >
                <span
                  class="track-title truncate text-sm font-medium text-neutral-900 transition-colors group-hover:text-orange-600 dark:text-neutral-100 dark:group-hover:text-orange-400"
                  >Titre de la piste</span
                >
              </div>
              <span
                class="track-duration hidden flex-shrink-0 font-mono text-xs text-neutral-500 dark:text-neutral-400"
                >3:45</span
              >
            </div>
          </template>
        </div>

        <!-- Notes -->
        <div id="vinyl-notes-section" class="hidden">
          <h4
            class="mb-3 flex items-center gap-2 text-lg font-semibold text-neutral-900 dark:text-neutral-100"
          >
            <svg
              class="h-5 w-5 text-orange-600 dark:text-orange-400"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"
              ></path>
            </svg>
            Notes
          </h4>
          <div
            class="rounded-lg border-l-4 border-orange-500 bg-gradient-to-r from-orange-50 to-orange-100 p-4 dark:from-orange-900/20 dark:to-orange-800/20"
          >
            <p
              id="vinyl-notes"
              class="text-sm leading-relaxed text-neutral-700 dark:text-neutral-300"
            >
              Notes
            </p>
          </div>
        </div>
      </div>
    </template>

    <!-- État de chargement -->
    <div id="vinyl-loading" class="flex items-center justify-center py-12">
      <p class="text-neutral-500 dark:text-neutral-400">Chargement...</p>
    </div>
  </div>

  <div slot="footer">
    <div class="flex gap-3">
      <Button
        id="add-to-collection"
        variant="gradient"
        size="lg"
        class="flex-1 hover:scale-[1.02] active:scale-[0.98]"
      >
        <Plus class="h-5 w-5" />
        Ajouter à ma collection
      </Button>
      <Button id="close-modal-btn" variant="ghost" size="lg"> Fermer </Button>
    </div>
  </div>
</Modal>

<script>
  // Fonction pour mettre à jour le contenu de la modal
  const updateVinylModal = (vinylData: any) => {
    const content = document.getElementById('vinyl-content')
    const loading = document.getElementById('vinyl-loading')
    const template = document.getElementById('vinyl-template')

    if (!content || !template) return

    // Masquer le loading et cloner le template
    loading?.classList.add('hidden')
    const templateContent = (template as HTMLTemplateElement).content.cloneNode(
      true
    ) as DocumentFragment

    // Remplir les données de base
    const title = templateContent.getElementById('vinyl-title')
    const artist = templateContent.getElementById('vinyl-artist')
    const initials = templateContent.getElementById('vinyl-initials')
    const image = templateContent.getElementById('vinyl-image')

    if (title) title.textContent = vinylData.title || 'Titre inconnu'
    if (artist) artist.textContent = vinylData.artist || 'Artiste inconnu'

    // Gérer l'image ou les initiales
    if (vinylData.thumb && image) {
      image.innerHTML = `<img src="${vinylData.thumb}" alt="${vinylData.title}" class="h-48 w-48 rounded-lg object-cover shadow-md" />`
    } else if (initials) {
      const artistInitial = vinylData.artist?.charAt(0) || '?'
      const titleInitial = vinylData.title?.charAt(0) || '?'
      initials.textContent = `${artistInitial}${titleInitial}`.toUpperCase()
    }

    // Remplir les informations optionnelles
    updateOptionalField(templateContent, 'vinyl-year', 'vinyl-year-card', vinylData.year)
    updateOptionalField(
      templateContent,
      'vinyl-genre',
      'vinyl-genre-card',
      Array.isArray(vinylData.genre) ? vinylData.genre.join(', ') : vinylData.genre
    )
    updateOptionalField(templateContent, 'vinyl-country', 'vinyl-country-card', vinylData.country)
    updateOptionalField(templateContent, 'vinyl-label', 'vinyl-label-card', vinylData.label)
    updateOptionalField(templateContent, 'vinyl-format', 'vinyl-format-card', vinylData.format)

    // Gérer la tracklist
    if (vinylData.tracklist && vinylData.tracklist.length > 0) {
      const tracklistSection = templateContent.getElementById('vinyl-tracklist-section')
      const tracklistTitle = templateContent.getElementById('vinyl-tracklist-title')
      const tracklistContainer = templateContent.getElementById('vinyl-tracklist')

      if (tracklistSection) tracklistSection.classList.remove('hidden')
      if (tracklistTitle)
        tracklistTitle.textContent = `Tracklist (${vinylData.tracklist.length} pistes)`

      if (tracklistContainer) {
        // Vider le conteneur
        tracklistContainer.innerHTML = ''

        // Créer les pistes à partir du template
        vinylData.tracklist.forEach(
          (track: { position: string; title: string; duration?: string }) => {
            const trackTemplate = document.getElementById('track-template')
            if (trackTemplate) {
              const trackElement = (trackTemplate as HTMLTemplateElement).content.cloneNode(
                true
              ) as DocumentFragment

              // Remplir les données
              const positionEl = trackElement.querySelector('.track-position')
              const titleEl = trackElement.querySelector('.track-title')
              const durationEl = trackElement.querySelector('.track-duration')

              if (positionEl) positionEl.textContent = track.position
              if (titleEl) titleEl.textContent = track.title

              if (track.duration && durationEl) {
                durationEl.textContent = track.duration
                durationEl.classList.remove('hidden')
              }

              tracklistContainer.appendChild(trackElement)
            }
          }
        )
      }
    }

    // Gérer les notes
    if (vinylData.notes) {
      const notesSection = templateContent.getElementById('vinyl-notes-section')
      const notesContent = templateContent.getElementById('vinyl-notes')

      if (notesSection) notesSection.classList.remove('hidden')
      if (notesContent) notesContent.textContent = vinylData.notes
    }

    // Remplacer le contenu
    content.innerHTML = ''
    content.appendChild(templateContent)
  }

  // Fonction utilitaire pour mettre à jour les champs optionnels
  const updateOptionalField = (
    template: DocumentFragment,
    fieldId: string,
    cardId: string,
    value: any
  ) => {
    if (!value) return

    const field = template.getElementById(fieldId)
    const card = template.getElementById(cardId)

    if (field) field.textContent = value
    if (card) {
      card.classList.remove('hidden')
      card.classList.add('flex')
    }
  }

  // Gérer l'ajout à la collection
  document.getElementById('add-to-collection')?.addEventListener('click', () => {
    console.log('Ajouter à la collection')
    // Ici on pourrait ajouter une logique pour ajouter à la collection
    document.dispatchEvent(new CustomEvent('close-vinylModal'))
  })

  // Gérer le bouton de fermeture
  document.getElementById('close-modal-btn')?.addEventListener('click', () => {
    document.dispatchEvent(new CustomEvent('close-vinylModal'))
  })

  // Écouter les événements pour mettre à jour la modal
  document.addEventListener('update-vinyl-modal', (event) => {
    if (event instanceof CustomEvent) {
      updateVinylModal(event.detail)
    }
  })
</script>
