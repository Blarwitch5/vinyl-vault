---
export interface Props {
  value?: number
  duration?: number
  prefix?: string
  suffix?: string
  decimals?: number
}

const { value = 1000, duration = 2000, prefix = '', suffix = '', decimals = 0 } = Astro.props
---

<span
  class="animated-number"
  data-value={value}
  data-duration={duration}
  data-prefix={prefix}
  data-suffix={suffix}
  data-decimals={decimals}
>
  0
</span>

<script client:visible>
  const el = document.currentScript.previousElementSibling
  const target = +el.dataset.value
  const duration = +el.dataset.duration
  const prefix = el.dataset.prefix || ''
  const suffix = el.dataset.suffix || ''
  const decimals = +el.dataset.decimals || 0

  let start = 0
  const startTime = performance.now()

  function animate(time) {
    const progress = Math.min((time - startTime) / duration, 1)

    // Easing function pour une animation plus naturelle
    const easeOutQuart = 1 - Math.pow(1 - progress, 4)
    const current = easeOutQuart * target

    // Formatage selon le type de nombre
    let formattedValue
    if (decimals > 0) {
      formattedValue = current.toFixed(decimals)
    } else {
      formattedValue = Math.floor(current).toLocaleString('fr-FR')
    }

    el.textContent = `${prefix}${formattedValue}${suffix}`

    if (progress < 1) {
      requestAnimationFrame(animate)
    }
  }

  requestAnimationFrame(animate)
</script>
