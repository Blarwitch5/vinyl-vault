---
import DashboardLayout from '../layouts/DashboardLayout.astro'
import Layout from '../layouts/Layout.astro'
import SearchResults from '../components/SearchResults.astro'
import VinylDetailsModal from '../components/VinylDetailsModal.astro'
import ViewToggle from '../components/ui/ViewToggle.astro'
import { ScanSearch } from '@lucide/astro/icons'
---

<Layout title="Recherche">
  <DashboardLayout title="Recherche" currentPath="/recherche">
    <div class="mb-6">
      <h1 class="mb-4 text-xl font-bold text-neutral-900 dark:text-neutral-100">
        Rechercher un Vinyle
      </h1>

      <div class="rounded-lg bg-neutral-100 p-6 shadow-sm dark:bg-neutral-800">
        <div class="flex flex-col gap-4 md:flex-row">
          <div class="flex-1">
            <label
              for="search-input"
              class="mb-2 block text-xs font-medium text-neutral-700 dark:text-neutral-300"
            >
              Recherche
            </label>
            <input
              type="text"
              id="search-input"
              placeholder="Artiste, album, genre..."
              class="w-full rounded-lg border border-neutral-300 px-4 py-2 focus:border-orange-500 focus:ring-orange-500 dark:border-neutral-600 dark:bg-neutral-700 dark:text-neutral-100"
            />
          </div>
          <div class="md:w-48">
            <label
              for="genre-filter"
              class="mb-2 block text-xs font-medium text-neutral-700 dark:text-neutral-300"
            >
              Genre
            </label>
            <select
              id="genre-filter"
              class="w-full rounded-lg border border-neutral-300 px-4 py-2 focus:border-orange-500 focus:ring-orange-500 dark:border-neutral-600 dark:bg-neutral-700 dark:text-neutral-100"
            >
              <option value="">Tous les genres</option>
              <option value="rock">Rock</option>
              <option value="jazz">Jazz</option>
              <option value="electronic">Electronic</option>
              <option value="classical">Classical</option>
              <option value="blues">Blues</option>
            </select>
          </div>
          <div class="md:w-32">
            <label
              for="year-filter"
              class="mb-2 block text-xs font-medium text-neutral-700 dark:text-neutral-300"
            >
              Année
            </label>
            <input
              type="number"
              id="year-filter"
              placeholder="2024"
              class="w-full rounded-lg border border-neutral-300 px-4 py-2 focus:border-orange-500 focus:ring-orange-500 dark:border-neutral-600 dark:bg-neutral-700 dark:text-neutral-100"
            />
          </div>
          <div class="flex items-end">
            <button
              id="search-btn"
              class="bg-gradient-rock hover:bg-gradient-rock-hover flex items-center gap-2 rounded-lg px-6 py-2 text-neutral-100 shadow-md transition-all duration-300 ease-in-out hover:shadow-lg"
            >
              <ScanSearch class="h-4 w-4" />
              Rechercher
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Contrôles de vue et résultats -->
    <div class="mb-6 flex items-center justify-between">
      <div class="flex items-center gap-4">
        <h2 class="text-lg font-semibold text-neutral-900 dark:text-neutral-100">
          Résultats de recherche
        </h2>
        <span id="results-count" class="text-sm text-neutral-500 dark:text-neutral-400"
          >0 résultats</span
        >
      </div>
      <ViewToggle currentView="grid" availableViews={['grid', 'list', 'timeline']} />
    </div>

    <!-- Résultats -->
    <div id="search-results-container">
      <SearchResults
        results={[
          {
            id: '2',
            title: 'Kind of Blue',
            artist: 'Miles Davis',
            year: '1959',
            genre: ['Jazz'],
            thumb: 'https://i.discogs.com/example2.jpg',
          },
          {
            id: '5',
            title: 'Revolver',
            artist: 'The Beatles',
            year: '1966',
            genre: ['Rock', 'Psychedelic Rock'],
            thumb: undefined,
          },
          {
            id: '12',
            title: 'Pet Sounds',
            artist: 'The Beach Boys',
            year: '1966',
            genre: ['Pop', 'Psychedelic Pop'],
            thumb: 'https://i.discogs.com/example12.jpg',
          },
          {
            id: '10',
            title: 'The Velvet Underground & Nico',
            artist: 'The Velvet Underground',
            year: '1967',
            genre: ['Rock', 'Art Rock'],
            thumb: 'https://i.discogs.com/example10.jpg',
          },
          {
            id: '4',
            title: 'Abbey Road',
            artist: 'The Beatles',
            year: '1969',
            genre: ['Rock', 'Pop'],
            thumb: 'https://i.discogs.com/example4.jpg',
          },
          {
            id: '6',
            title: 'Bitches Brew',
            artist: 'Miles Davis',
            year: '1970',
            genre: ['Jazz', 'Fusion'],
            thumb: 'https://i.discogs.com/example6.jpg',
          },
          {
            id: '8',
            title: 'Led Zeppelin IV',
            artist: 'Led Zeppelin',
            year: '1971',
            genre: ['Rock', 'Hard Rock'],
            thumb: 'https://i.discogs.com/example8.jpg',
          },
          {
            id: '15',
            title: 'The Dark Side of the Moon',
            artist: 'Pink Floyd',
            year: '1973',
            genre: ['Rock', 'Progressive Rock'],
            thumb: 'https://i.discogs.com/example15.jpg',
          },
          {
            id: '7',
            title: 'Wish You Were Here',
            artist: 'Pink Floyd',
            year: '1975',
            genre: ['Rock', 'Progressive Rock'],
            thumb: 'https://i.discogs.com/example7.jpg',
          },
          {
            id: '3',
            title: 'Rumours',
            artist: 'Fleetwood Mac',
            year: '1977',
            genre: ['Rock', 'Pop Rock'],
            thumb: 'https://i.discogs.com/example3.jpg',
          },
          {
            id: '9',
            title: 'Nevermind',
            artist: 'Nirvana',
            year: '1991',
            genre: ['Rock', 'Grunge'],
            thumb: 'https://i.discogs.com/example9.jpg',
          },
          {
            id: '11',
            title: 'OK Computer',
            artist: 'Radiohead',
            year: '1997',
            genre: ['Rock', 'Alternative Rock'],
            thumb: 'https://i.discogs.com/example11.jpg',
          },
        ]}
        currentView="grid"
        availableViews={['grid', 'list', 'timeline']}
      />
    </div>

    <!-- Modal -->
    <VinylDetailsModal />
  </DashboardLayout>
</Layout>

<script>
  // Déclaration de type pour les fonctions globales
  declare global {
    interface Window {
      updateVinylModal: (vinylData: any) => void
      openVinylModal: () => void
      closeVinylModal: () => void
    }
  }

  // Éléments DOM
  const searchBtn = document.getElementById('search-btn')
  const searchInput = document.getElementById('search-input')
  const genreFilter = document.getElementById('genre-filter')
  const yearFilter = document.getElementById('year-filter')
  const resultsCount = document.getElementById('results-count')

  // Recherche
  const performSearch = async () => {
    const query = (searchInput as HTMLInputElement)?.value.trim()
    if (!query) return

    try {
      const params = new URLSearchParams({ q: query })
      if ((genreFilter as HTMLSelectElement)?.value) params.append('type', 'release')

      const response = await fetch(`/api/search.json?${params}`)
      const data = await response.json()

      if (data.results) {
        resultsCount!.textContent = `${data.results.length} résultat${data.results.length > 1 ? 's' : ''}`
      } else {
        resultsCount!.textContent = '0 résultats'
      }
    } catch (error) {
      console.error('Erreur de recherche:', error)
      resultsCount!.textContent = '0 résultats'
    }
  }

  // Événements
  searchBtn?.addEventListener('click', performSearch)
  searchInput?.addEventListener('keypress', (event: KeyboardEvent) => {
    if (event.key === 'Enter') {
      performSearch()
    }
  })

  // Initialiser le compteur de résultats
  resultsCount!.textContent = '12 résultats'
</script>
