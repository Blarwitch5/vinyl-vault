---
// Composant de toggle pour le thème dark/light selon les règles .cursorrules
---

<button
  id="theme-toggle"
  class="relative inline-flex items-center justify-center w-10 h-10 rounded-lg bg-light-surface dark:bg-dark-surface hover:bg-light-surface dark:hover:bg-gray-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-dark-background"
  aria-label="Basculer le thème"
>
  <!-- Icône soleil (mode clair) -->
  <svg
    id="sun-icon"
    class="w-5 h-5 text-primary-600 transition-all duration-200"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      clip-rule="evenodd"></path>
  </svg>

  <!-- Icône lune (mode sombre) -->
  <svg
    id="moon-icon"
    class="w-5 h-5 text-secondary-400 transition-all duration-200 hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
</button>

<script>
  import { createThemeHelper } from "../../utils/theme-helpers";
  import { createDomHelper } from "../../utils/dom-helpers";

  document.addEventListener("DOMContentLoaded", () => {
    const themeHelper = createThemeHelper();
    const domHelper = createDomHelper();

    const toggle = domHelper.getElementById("theme-toggle");
    const sunIcon = domHelper.getElementById("sun-icon");
    const moonIcon = domHelper.getElementById("moon-icon");

    // Fonction pour mettre à jour les icônes selon les règles
    const updateIcons = (isDark: boolean): void => {
      if (isDark) {
        sunIcon?.classList.add("hidden");
        moonIcon?.classList.remove("hidden");
      } else {
        sunIcon?.classList.remove("hidden");
        moonIcon?.classList.add("hidden");
      }
    };

    // Appliquer le thème initial selon les règles
    themeHelper.initTheme();
    updateIcons(themeHelper.isDarkMode());

    // Gérer le click sur le toggle selon les règles (fonctionnel)
    toggle?.addEventListener("click", () => {
      themeHelper.toggleTheme();
      updateIcons(themeHelper.isDarkMode());
    });

    // Écouter les changements du thème système
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", () => {
        if (!themeHelper.getStoredTheme()) {
          themeHelper.initTheme();
          updateIcons(themeHelper.isDarkMode());
        }
      });
  });
</script>
