---
// Modal de confirmation pour supprimer une collection
---

<div
  id="delete-collection-modal"
  class="fixed inset-0 bg-black/70 backdrop-blur-sm items-center justify-center z-50 hidden"
>
  <div
    class="bg-white dark:bg-neutral-900 border border-neutral-200 dark:border-neutral-700 rounded-2xl p-6 w-full max-w-md mx-4 shadow-2xl"
  >
    <!-- Header -->
    <div class="flex items-center justify-between mb-6">
      <h2 class="text-xl font-bold text-neutral-900 dark:text-neutral-50">Supprimer la collection</h2>
      <button
        id="close-delete-collection-modal"
        class="text-neutral-600 dark:text-neutral-400 hover:text-neutral-900 dark:hover:text-neutral-50 transition-colors"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
d="M18 6 6 18"
                  />
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <!-- Contenu -->
    <div class="mb-6">
      <div class="flex items-center space-x-3 mb-4">
        <div
          class="w-12 h-12 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center"
        >
          <svg
            class="w-6 h-6 text-red-600 dark:text-red-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
d="M10.29 3.86 1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"
                  />
                  <line x1="12" x2="12" y1="9" y2="13"
                  />
                  <line x1="12" x2="12.01" y1="17" y2="17"></path>
          </svg>
        </div>
        <div>
          <h3 class="font-semibold text-neutral-900 dark:text-neutral-50">Confirmation requise</h3>
          <p class="text-sm text-neutral-600 dark:text-neutral-400">
            Cette action est irréversible
          </p>
        </div>
      </div>

      <div class="bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-4">
        <p class="text-red-800 dark:text-red-200 text-sm">
          <strong>Attention :</strong> La suppression de cette collection supprimera également tous les vinyles qu'elle contient.
        </p>
      </div>

      <div id="collection-info" class="bg-neutral-50 dark:bg-neutral-800 rounded-lg p-4">
        <h4 id="collection-name" class="font-medium text-neutral-900 dark:text-neutral-50 mb-2"></h4>
        <p id="collection-details" class="text-sm text-neutral-600 dark:text-neutral-400"></p>
      </div>
    </div>

    <!-- Erreur -->
    <div
      id="delete-collection-error"
      class="bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-800 rounded-lg p-3 mb-4 hidden"
    >
      <p id="delete-collection-error-message" class="text-red-800 dark:text-red-200 text-sm"></p>
    </div>

    <!-- Actions -->
    <div class="flex space-x-3">
      <button
        id="cancel-delete-collection"
        class="flex-1 bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-300 py-2 px-4 rounded-lg hover:bg-neutral-200 dark:hover:bg-neutral-700 transition-colors"
      >
        Annuler
      </button>
      <button
        id="confirm-delete-collection"
        class="flex-1 bg-red-600 text-white py-2 px-4 rounded-lg hover:bg-red-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
      >
        <span id="delete-collection-text">Supprimer</span>
        <span id="delete-collection-loading" class="hidden">Suppression...</span>
      </button>
    </div>
  </div>
</div>

<script>
  let currentCollectionId: string | null = null

  // Éléments DOM
  const modal = document.getElementById('delete-collection-modal')
  const closeBtn = document.getElementById('close-delete-collection-modal')
  const cancelBtn = document.getElementById('cancel-delete-collection')
  const confirmBtn = document.getElementById('confirm-delete-collection')
  const errorDiv = document.getElementById('delete-collection-error')
  const errorMessage = document.getElementById('delete-collection-error-message')
  const deleteText = document.getElementById('delete-collection-text')
  const deleteLoading = document.getElementById('delete-collection-loading')

  // Fonction pour ouvrir le modal
  function openDeleteCollectionModal(collection: {
    id: string
    name: string
    vinylCount?: number
  }) {
    currentCollectionId = collection.id

    // Mettre à jour les informations de la collection
    const nameEl = document.getElementById('collection-name')
    const detailsEl = document.getElementById('collection-details')

    if (nameEl) nameEl.textContent = collection.name
    if (detailsEl) {
      const vinylCount = collection.vinylCount || 0
      detailsEl.textContent = `${vinylCount} vinyle${vinylCount > 1 ? 's' : ''} sera${vinylCount > 1 ? 'nt' : ''} supprimé${vinylCount > 1 ? 's' : ''}`
    }

    // Réinitialiser l'état
    hideError()
    setDeleteButtonState(false)

    // Afficher le modal
    if (modal) {
      document.body.style.overflow = 'hidden'
      modal.classList.remove('hidden')
      modal.classList.add('flex')
    }
  }

  // Fonction pour fermer le modal
  function closeDeleteCollectionModal() {
    if (modal) {
      modal.classList.add('hidden')
      modal.classList.remove('flex')
      document.body.style.overflow = ''
    }
    currentCollectionId = null
  }

  // Fonction pour définir l'état du bouton
  function setDeleteButtonState(isLoading: boolean) {
    if (confirmBtn) {
      confirmBtn.disabled = isLoading
    }
    if (deleteText) deleteText.classList.toggle('hidden', isLoading)
    if (deleteLoading) deleteLoading.classList.toggle('hidden', !isLoading)
  }

  // Fonction pour afficher une erreur
  function showError(message: string) {
    if (errorMessage) {
      errorMessage.textContent = message
    }
    errorDiv?.classList.remove('hidden')
  }

  // Fonction pour masquer l'erreur
  function hideError() {
    errorDiv?.classList.add('hidden')
  }

  // Supprimer la collection
  async function deleteCollection() {
    if (!currentCollectionId) return

    setDeleteButtonState(true)
    hideError()

    try {
      const response = await fetch('/api/collections/delete', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify({ collectionId: currentCollectionId }),
      })

      const data = await response.json()

      if (response.ok && data.success) {
        closeDeleteCollectionModal()
        
        // Appeler la fonction de recalcul des statistiques si elle existe
        if (typeof (window as any).recalculateStats === 'function') {
          (window as any).recalculateStats()
        } else {
          // Fallback : recharger la page
          window.location.reload()
        }
      } else {
        showError(data.error || 'Erreur lors de la suppression de la collection')
      }
    } catch (error) {
      console.error('Erreur lors de la suppression de la collection :', error)
      showError('Erreur de connexion')
    } finally {
      setDeleteButtonState(false)
    }
  }

  // Événements
  closeBtn?.addEventListener('click', closeDeleteCollectionModal)
  cancelBtn?.addEventListener('click', closeDeleteCollectionModal)
  confirmBtn?.addEventListener('click', deleteCollection)

  modal?.addEventListener('click', (e) => {
    if (e.target === modal) closeDeleteCollectionModal()
  })

  // Exposer la fonction pour ouvrir le modal
  ;(window as any).openDeleteCollectionModal = openDeleteCollectionModal
</script>
