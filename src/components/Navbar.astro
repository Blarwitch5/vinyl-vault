---
// Navbar pour la navigation principale
import { ThemeToggle } from "./theme-toggle";
---

<nav
  class="bg-light-background dark:bg-dark-background shadow-lg border-b border-light-surface dark:border-dark-surface transition-colors duration-300"
>
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <!-- Logo et titre -->
      <div class="flex items-center space-x-4">
        <a href="/" class="flex items-center space-x-2">
          <span class="text-2xl">üéµ</span>
          <span class="text-xl font-bold text-light-text dark:text-dark-text"
            >VinylVault</span
          >
        </a>
      </div>

      <!-- Navigation principale -->
      <div class="hidden md:flex items-center space-x-6">
        <a
          href="/"
          class="text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 transition-colors"
        >
          Accueil
        </a>
        <a
          href="/search"
          class="text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 transition-colors"
        >
          Rechercher
        </a>
        <a
          href="/dashboard"
          class="text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 transition-colors"
        >
          Ma Collection
        </a>
      </div>

      <!-- Boutons d'authentification et th√®me -->
      <div class="flex items-center space-x-4">
        <ThemeToggle />

        <!-- Menu utilisateur connect√© -->
        <div id="user-menu" class="hidden relative">
          <button
            id="user-menu-button"
            class="flex items-center space-x-2 text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 transition-colors"
          >
            <span id="user-name" class="text-sm font-medium"></span>
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>

          <!-- Dropdown menu -->
          <div
            id="user-dropdown"
            class="hidden absolute right-0 mt-2 w-48 bg-light-background dark:bg-dark-background rounded-xl shadow-lg border border-light-surface dark:border-dark-surface z-50"
          >
            <div class="py-2">
              <a
                href="/profile"
                class="block px-4 py-2 text-sm text-light-textSecondary dark:text-dark-textSecondary hover:bg-light-surface dark:hover:bg-dark-surface transition-colors"
              >
                Mon Profil
              </a>
              <a
                href="/dashboard"
                class="block px-4 py-2 text-sm text-light-textSecondary dark:text-dark-textSecondary hover:bg-light-surface dark:hover:bg-dark-surface transition-colors"
              >
                Ma Collection
              </a>
              <div
                class="border-t border-light-surface dark:border-dark-surface my-1"
              >
              </div>
              <button
                id="logout-button"
                class="w-full text-left px-4 py-2 text-sm text-light-textSecondary dark:text-dark-textSecondary hover:bg-light-surface dark:hover:bg-dark-surface transition-colors"
              >
                Se D√©connecter
              </button>
            </div>
          </div>
        </div>

        <!-- Menu non connect√© -->
        <div id="guest-menu" class="flex items-center space-x-4">
          <a
            href="/login"
            class="text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 transition-colors"
          >
            Connexion
          </a>
          <a
            href="/register"
            class="bg-light-accent1 text-white px-4 py-2 rounded-xl hover:bg-amber-700 dark:bg-dark-accent1 dark:hover:bg-amber-600 transition-colors"
          >
            Inscription
          </a>
        </div>
      </div>

      <!-- Menu mobile -->
      <div class="md:hidden">
        <button
          id="mobile-menu-toggle"
          class="text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 focus:outline-none"
        >
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Menu mobile d√©roulant -->
    <div
      id="mobile-menu"
      class="hidden md:hidden border-t border-light-surface dark:border-dark-surface"
    >
      <div class="py-4 space-y-2">
        <a
          href="/"
          class="block text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 py-2"
        >
          Accueil
        </a>
        <a
          href="/search"
          class="block text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 py-2"
        >
          Rechercher
        </a>
        <a
          href="/dashboard"
          class="block text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 py-2"
        >
          Ma Collection
        </a>
        <div
          class="border-t border-light-surface dark:border-dark-surface pt-2 space-y-2"
        >
          <div class="flex items-center justify-between py-2">
            <span
              class="text-light-textSecondary dark:text-dark-textSecondary text-sm"
              >Th√®me</span
            >
            <ThemeToggle />
          </div>

          <!-- Menu mobile utilisateur connect√© -->
          <div id="mobile-user-menu" class="hidden">
            <a
              href="/profile"
              class="block text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 py-2"
            >
              Mon Profil
            </a>
            <button
              id="mobile-logout-button"
              class="block text-left w-full text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 py-2"
            >
              Se D√©connecter
            </button>
          </div>

          <!-- Menu mobile non connect√© -->
          <div id="mobile-guest-menu">
            <a
              href="/login"
              class="block text-light-textSecondary dark:text-dark-textSecondary hover:text-light-accent1 dark:hover:text-dark-accent1 py-2"
            >
              Connexion
            </a>
            <a
              href="/register"
              class="block bg-light-accent1 text-white px-4 py-2 rounded-xl hover:bg-amber-700 dark:bg-dark-accent1 dark:hover:bg-amber-600 transition-colors"
            >
              Inscription
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  import { getCurrentUser, logout } from "../lib/auth.js";

  // Gestion de l'√©tat d'authentification
  document.addEventListener("DOMContentLoaded", async () => {
    // Elements de l'interface
    const userMenu = document.getElementById("user-menu");
    const guestMenu = document.getElementById("guest-menu");
    const mobileUserMenu = document.getElementById("mobile-user-menu");
    const mobileGuestMenu = document.getElementById("mobile-guest-menu");
    const userNameSpan = document.getElementById("user-name");
    const userMenuButton = document.getElementById("user-menu-button");
    const userDropdown = document.getElementById("user-dropdown");
    const logoutButton = document.getElementById("logout-button");
    const mobileLogoutButton = document.getElementById("mobile-logout-button");

    // V√©rifier l'√©tat de connexion
    try {
      const user = await getCurrentUser();

      if (user && userMenu && guestMenu && userNameSpan) {
        // Utilisateur connect√©
        userMenu.classList.remove("hidden");
        guestMenu.classList.add("hidden");
        mobileUserMenu?.classList.remove("hidden");
        mobileGuestMenu?.classList.add("hidden");

        // Afficher le nom de l'utilisateur
        userNameSpan.textContent = user.name || user.email.split("@")[0];

        // Gestion du dropdown
        if (userMenuButton && userDropdown) {
          userMenuButton.addEventListener("click", (e) => {
            e.stopPropagation();
            userDropdown.classList.toggle("hidden");
          });

          // Fermer le dropdown en cliquant ailleurs
          document.addEventListener("click", () => {
            userDropdown.classList.add("hidden");
          });
        }

        // Gestion de la d√©connexion
        const handleLogout = () => {
          logout();
        };

        logoutButton?.addEventListener("click", handleLogout);
        mobileLogoutButton?.addEventListener("click", handleLogout);
      } else {
        // Utilisateur non connect√©
        userMenu?.classList.add("hidden");
        guestMenu?.classList.remove("hidden");
        mobileUserMenu?.classList.add("hidden");
        mobileGuestMenu?.classList.remove("hidden");
      }
    } catch (error) {
      console.error(
        "Erreur lors de la v√©rification de l'authentification:",
        error
      );
      // En cas d'erreur, afficher le menu non connect√©
      userMenu?.classList.add("hidden");
      guestMenu?.classList.remove("hidden");
      mobileUserMenu?.classList.add("hidden");
      mobileGuestMenu?.classList.remove("hidden");
    }

    // Gestion du menu mobile
    const toggle = document.getElementById("mobile-menu-toggle");
    const menu = document.getElementById("mobile-menu");

    if (toggle && menu) {
      toggle.addEventListener("click", () => {
        menu.classList.toggle("hidden");
      });
    }
  });
</script>
