---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Navbar from "../../components/Navbar.astro";
import Footer from "../../components/Footer.astro";
import VinylCard from "../../components/VinylCard.astro";

// Récupérer l'ID de la collection depuis l'URL
const { id } = Astro.params;

const title = `Collection #${id} - VinylVault`;
const description = "Explorez cette collection de vinyles en détail";

// Note: En production, vous récupéreriez ces données depuis votre API/base de données
// Données simulées pour l'exemple
const collection = {
  id: id,
  name: id === "1" ? "Ma collection principale" : "Jazz Classics",
  description:
    id === "1" ? "Mes vinyles préférés" : "Ma collection de jazz vintage",
  isPublic: id === "2",
  owner: {
    id: "user123",
    name: "Jean Dupont",
    isCurrentUser: true, // En réalité, vous vérifieriez si l'utilisateur connecté est le propriétaire
  },
  createdAt: new Date("2023-01-15"),
  updatedAt: new Date("2024-01-10"),
  itemCount: id === "1" ? 42 : 18,
  totalValue: id === "1" ? 1250.0 : 890.0,
};

// Vinyles de la collection (simulés)
const collectionVinyls = [
  {
    id: "1",
    title: "Dark Side of the Moon",
    artist: "Pink Floyd",
    year: 1973,
    format: "LP",
    condition: "Near Mint",
    coverImage: "/vinyl-covers/dark-side.jpg",
    price: 45.0,
    note: "Original pressing, excellent état",
  },
  {
    id: "2",
    title: "Kind of Blue",
    artist: "Miles Davis",
    year: 1959,
    format: "LP",
    condition: "Very Good Plus",
    coverImage: "/vinyl-covers/kind-of-blue.jpg",
    price: 32.0,
    note: "Réédition de 1975",
  },
  {
    id: "3",
    title: "Abbey Road",
    artist: "The Beatles",
    year: 1969,
    format: "LP",
    condition: "Mint",
    coverImage: "/vinyl-covers/abbey-road.jpg",
    price: 55.0,
  },
  {
    id: "4",
    title: "Blue Train",
    artist: "John Coltrane",
    year: 1957,
    format: "LP",
    condition: "Very Good",
    coverImage: "/vinyl-covers/blue-train.jpg",
    price: 28.0,
  },
  // Ajouter plus d'exemples...
];

// Statistiques de la collection
const stats = {
  topArtists: [
    { name: "Pink Floyd", count: 3 },
    { name: "Miles Davis", count: 2 },
    { name: "The Beatles", count: 2 },
  ],
  formatBreakdown: [
    { format: "LP", count: 35, percentage: 83 },
    { format: '12"', count: 5, percentage: 12 },
    { format: '7"', count: 2, percentage: 5 },
  ],
  conditionBreakdown: [
    { condition: "Mint", count: 8, percentage: 19 },
    { condition: "Near Mint", count: 15, percentage: 36 },
    { condition: "Very Good Plus", count: 12, percentage: 29 },
    { condition: "Very Good", count: 7, percentage: 16 },
  ],
};

// Filtres et tri
const sortBy = Astro.url.searchParams.get("sort") || "title";
const filterGenre = Astro.url.searchParams.get("genre") || "";
const filterFormat = Astro.url.searchParams.get("format") || "";
---

<BaseLayout title={title} description={description}>
  <Navbar slot="navbar" />

  <div class="container mx-auto px-4 py-8">
    <!-- En-tête de la collection -->
    <div class="bg-light-background rounded-lg shadow-sm border border-light-surface p-6 mb-8">
      <div class="flex items-start justify-between">
        <div class="flex-1">
          <div class="flex items-center mb-2">
            <h1 class="text-3xl font-bold text-light-text mr-3">
              {collection.name}
            </h1>
            <span
              class={`px-3 py-1 rounded-full text-sm font-medium ${
                collection.isPublic
                  ? "bg-green-100 text-green-800"
                  : "bg-light-surface text-light-text"
              }`}
            >
              {
                collection.isPublic
                  ? "Collection publique"
                  : "Collection privée"
              }
            </span>
          </div>

          <p class="text-light-textSecondary mb-4">{collection.description}</p>

          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
            <div>
              <span class="text-light-textSecondary">Propriétaire:</span>
              <p class="font-medium text-light-text">{collection.owner.name}</p>
            </div>
            <div>
              <span class="text-light-textSecondary">Vinyles:</span>
              <p class="font-medium text-light-text">{collection.itemCount}</p>
            </div>
            <div>
              <span class="text-light-textSecondary">Valeur totale:</span>
              <p class="font-medium text-light-text">
                {collection.totalValue.toFixed(2)} €
              </p>
            </div>
            <div>
              <span class="text-light-textSecondary">Dernière mise à jour:</span>
              <p class="font-medium text-light-text">
                {collection.updatedAt.toLocaleDateString("fr-FR")}
              </p>
            </div>
          </div>
        </div>

        {
          collection.owner.isCurrentUser && (
            <div class="flex space-x-2">
              <button class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors">
                Modifier
              </button>
              <button class="border border-light-surface text-gray-700 px-4 py-2 rounded-md hover:bg-light-background transition-colors">
                Partager
              </button>
            </div>
          )
        }
      </div>
    </div>

    <div class="grid lg:grid-cols-4 gap-8">
      <!-- Sidebar - Filtres et statistiques -->
      <div class="lg:col-span-1 space-y-6">
        <!-- Filtres -->
        <div class="bg-light-background rounded-lg shadow-sm border border-light-surface">
          <div class="px-4 py-3 border-b border-light-surface">
            <h3 class="text-lg font-semibold text-light-text">Filtres</h3>
          </div>
          <div class="p-4 space-y-4">
            <form method="get" class="space-y-4">
              <!-- Tri -->
              <div>
                <label
                  for="sort"
                  class="block text-sm font-medium text-gray-700 mb-1"
                >
                  Trier par
                </label>
                <select
                  id="sort"
                  name="sort"
                  class="w-full px-3 py-2 border border-light-surface rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm"
                >
                  <option value="title" selected={sortBy === "title"}
                    >Titre</option
                  >
                  <option value="artist" selected={sortBy === "artist"}
                    >Artiste</option
                  >
                  <option value="year" selected={sortBy === "year"}
                    >Année</option
                  >
                  <option value="price" selected={sortBy === "price"}
                    >Prix</option
                  >
                  <option value="condition" selected={sortBy === "condition"}
                    >État</option
                  >
                  <option value="added" selected={sortBy === "added"}
                    >Date d'ajout</option
                  >
                </select>
              </div>

              <!-- Genre -->
              <div>
                <label
                  for="genre"
                  class="block text-sm font-medium text-gray-700 mb-1"
                >
                  Genre
                </label>
                <select
                  id="genre"
                  name="genre"
                  class="w-full px-3 py-2 border border-light-surface rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm"
                >
                  <option value="">Tous les genres</option>
                  <option value="rock" selected={filterGenre === "rock"}
                    >Rock</option
                  >
                  <option value="jazz" selected={filterGenre === "jazz"}
                    >Jazz</option
                  >
                  <option value="pop" selected={filterGenre === "pop"}
                    >Pop</option
                  >
                  <option
                    value="electronic"
                    selected={filterGenre === "electronic"}>Electronic</option
                  >
                </select>
              </div>

              <!-- Format -->
              <div>
                <label
                  for="format"
                  class="block text-sm font-medium text-gray-700 mb-1"
                >
                  Format
                </label>
                <select
                  id="format"
                  name="format"
                  class="w-full px-3 py-2 border border-light-surface rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm"
                >
                  <option value="">Tous les formats</option>
                  <option value="LP" selected={filterFormat === "LP"}>LP</option
                  >
                  <option value="12" selected={filterFormat === "12"}
                    >12"</option
                  >
                  <option value="7" selected={filterFormat === "7"}>7"</option>
                  <option value="EP" selected={filterFormat === "EP"}>EP</option
                  >
                </select>
              </div>

              <button
                type="submit"
                class="w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors text-sm"
              >
                Appliquer
              </button>
            </form>
          </div>
        </div>

        <!-- Statistiques -->
        <div class="bg-light-background rounded-lg shadow-sm border border-light-surface">
          <div class="px-4 py-3 border-b border-light-surface">
            <h3 class="text-lg font-semibold text-light-text">Statistiques</h3>
          </div>
          <div class="p-4 space-y-4">
            <!-- Artistes favoris -->
            <div>
              <h4 class="text-sm font-medium text-light-text mb-2">
                Top artistes
              </h4>
              <div class="space-y-1">
                {
                  stats.topArtists.map((artist) => (
                    <div class="flex items-center justify-between text-sm">
                      <span class="text-gray-700">{artist.name}</span>
                      <span class="text-light-textSecondary">{artist.count}</span>
                    </div>
                  ))
                }
              </div>
            </div>

            <!-- Répartition par format -->
            <div>
              <h4 class="text-sm font-medium text-light-text mb-2">Formats</h4>
              <div class="space-y-2">
                {
                  stats.formatBreakdown.map((format) => (
                    <div>
                      <div class="flex items-center justify-between text-sm mb-1">
                        <span class="text-gray-700">{format.format}</span>
                        <span class="text-light-textSecondary">
                          {format.count} ({format.percentage}%)
                        </span>
                      </div>
                      <div class="w-full bg-light-surface rounded-full h-1">
                        <div
                          class="bg-blue-600 h-1 rounded-full"
                          style={`width: ${format.percentage}%`}
                        />
                      </div>
                    </div>
                  ))
                }
              </div>
            </div>

            <!-- Répartition par état -->
            <div>
              <h4 class="text-sm font-medium text-light-text mb-2">État</h4>
              <div class="space-y-2">
                {
                  stats.conditionBreakdown.map((condition) => (
                    <div>
                      <div class="flex items-center justify-between text-sm mb-1">
                        <span class="text-gray-700">{condition.condition}</span>
                        <span class="text-light-textSecondary">
                          {condition.count} ({condition.percentage}%)
                        </span>
                      </div>
                      <div class="w-full bg-light-surface rounded-full h-1">
                        <div
                          class="bg-green-600 h-1 rounded-full"
                          style={`width: ${condition.percentage}%`}
                        />
                      </div>
                    </div>
                  ))
                }
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Contenu principal - Vinyles -->
      <div class="lg:col-span-3">
        <!-- Barre d'outils -->
        <div class="flex items-center justify-between mb-6">
          <div class="flex items-center space-x-4">
            <h2 class="text-xl font-semibold text-light-text">
              {collectionVinyls.length} vinyles
            </h2>

            <!-- Toggle vue -->
            <div class="flex items-center bg-light-surface rounded-lg p-1">
              <button
                id="grid-view"
                class="px-3 py-1 rounded-md text-sm font-medium bg-light-background text-light-text shadow-sm"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"
                  ></path>
                </svg>
              </button>
              <button
                id="list-view"
                class="px-3 py-1 rounded-md text-sm font-medium text-light-textSecondary"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                </svg>
              </button>
            </div>
          </div>

          {
            collection.owner.isCurrentUser && (
              <button class="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition-colors">
                + Ajouter un vinyle
              </button>
            )
          }
        </div>

        <!-- Grille des vinyles -->
        <div
          id="vinyl-grid"
          class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6"
        >
          {
            collectionVinyls.map((vinyl) => (
              <VinylCard
                vinyl={vinyl}
                showActions={collection.owner.isCurrentUser}
                isInCollection={true}
              />
            ))
          }
        </div>

        <!-- Vue liste (cachée par défaut) -->
        <div id="vinyl-list" class="hidden space-y-4">
          {
            collectionVinyls.map((vinyl) => (
              <div class="bg-light-background border border-light-surface rounded-lg p-4 flex items-center space-x-4">
                <img
                  src={vinyl.coverImage || "/default-vinyl-cover.svg"}
                  alt={`Couverture de ${vinyl.title}`}
                  class="w-16 h-16 object-cover rounded"
                />
                <div class="flex-1">
                  <h3 class="font-semibold text-light-text">{vinyl.title}</h3>
                  <p class="text-light-textSecondary">{vinyl.artist}</p>
                  <div class="text-sm text-light-textSecondary">
                    {vinyl.year} • {vinyl.format} • {vinyl.condition}
                  </div>
                </div>
                <div class="text-right">
                  <div class="font-semibold text-light-text">
                    {vinyl.price?.toFixed(2)} €
                  </div>
                  {collection.owner.isCurrentUser && (
                    <div class="flex space-x-2 mt-2">
                      <button class="text-blue-600 hover:text-blue-700 text-sm">
                        Modifier
                      </button>
                      <button class="text-red-600 hover:text-red-700 text-sm">
                        Supprimer
                      </button>
                    </div>
                  )}
                </div>
              </div>
            ))
          }
        </div>

        {
          collectionVinyls.length === 0 && (
            <div class="text-center py-12">
              <div class="text-light-textSecondary mb-4">
                <svg
                  class="mx-auto h-12 w-12"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 11H5m14-5v12a2 2 0 01-2 2H7a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2z"
                  />
                </svg>
              </div>
              <h3 class="text-lg font-medium text-light-text mb-2">
                Aucun vinyle dans cette collection
              </h3>
              <p class="text-light-textSecondary mb-4">
                Commencez par ajouter quelques vinyles à votre collection.
              </p>
              {collection.owner.isCurrentUser && (
                <button class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors">
                  Ajouter un vinyle
                </button>
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>

  <Footer slot="footer" />
</BaseLayout>

<script>
  // Gestion des vues (grille/liste)
  document.addEventListener("DOMContentLoaded", () => {
    const gridViewBtn = document.getElementById("grid-view");
    const listViewBtn = document.getElementById("list-view");
    const vinylGrid = document.getElementById("vinyl-grid");
    const vinylList = document.getElementById("vinyl-list");

    function switchToGridView() {
      gridViewBtn?.classList.add("bg-light-background", "text-light-text", "shadow-sm");
      gridViewBtn?.classList.remove("text-light-textSecondary");
      listViewBtn?.classList.remove("bg-light-background", "text-light-text", "shadow-sm");
      listViewBtn?.classList.add("text-light-textSecondary");

      vinylGrid?.classList.remove("hidden");
      vinylList?.classList.add("hidden");
    }

    function switchToListView() {
      listViewBtn?.classList.add("bg-light-background", "text-light-text", "shadow-sm");
      listViewBtn?.classList.remove("text-light-textSecondary");
      gridViewBtn?.classList.remove("bg-light-background", "text-light-text", "shadow-sm");
      gridViewBtn?.classList.add("text-light-textSecondary");

      vinylGrid?.classList.add("hidden");
      vinylList?.classList.remove("hidden");
    }

    gridViewBtn?.addEventListener("click", switchToGridView);
    listViewBtn?.addEventListener("click", switchToListView);

    // Auto-submit des filtres
    const filterForm = document.querySelector("form");
    const selects = filterForm?.querySelectorAll("select");

    selects?.forEach((select) => {
      select.addEventListener("change", () => {
        filterForm?.submit();
      });
    });
  });
</script>
