---
import BaseLayout from "../layouts/BaseLayout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";

const title = "Connexion - VinylVault";
const description =
  "Connectez-vous à votre compte VinylVault pour accéder à votre collection de vinyles";
---

<BaseLayout title={title} description={description}>
  <Navbar slot="navbar" />

  <div
    class="min-h-screen flex items-center justify-center bg-light-background dark:bg-dark-background py-12 px-4 sm:px-6 lg:px-8"
  >
    <div class="max-w-md w-full space-y-8">
      <!-- En-tête -->
      <div class="text-center">
        <h2 class="mt-6 text-4xl font-bold text-light-text dark:text-dark-text">
          Connexion à votre compte
        </h2>
        <p
          class="mt-2 text-sm text-light-textSecondary dark:text-dark-textSecondary"
        >
          Ou
          <a
            href="/register"
            class="font-medium text-light-accent1 dark:text-dark-accent1 hover:text-light-accent1/80 dark:hover:text-dark-accent1/80 transition-colors"
          >
            créez un nouveau compte
          </a>
        </p>
      </div>

      <!-- Formulaire de connexion -->
      <form id="login-form" class="mt-8 space-y-6" action="#" method="POST">
        <div class="rounded-xl shadow-sm -space-y-px">
          <div>
            <label for="email" class="sr-only">Adresse email</label>
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="relative block w-full px-4 py-3 border border-light-surface dark:border-dark-surface placeholder:text-light-textSecondary dark:placeholder:text-dark-textSecondary text-light-text dark:text-dark-text bg-white dark:bg-dark-background rounded-t-xl focus:outline-none focus:ring-light-accent1 dark:focus:ring-dark-accent1 focus:border-light-accent1 dark:focus:border-dark-accent1 focus:z-10 sm:text-sm transition-colors"
              placeholder="Adresse email"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Mot de passe</label>
            <input
              id="password"
              name="password"
              type="password"
              autocomplete="current-password"
              required
              class="relative block w-full px-4 py-3 border border-light-surface dark:border-dark-surface placeholder:text-light-textSecondary dark:placeholder:text-dark-textSecondary text-light-text dark:text-dark-text bg-white dark:bg-dark-background rounded-b-xl focus:outline-none focus:ring-light-accent1 dark:focus:ring-dark-accent1 focus:border-light-accent1 dark:focus:border-dark-accent1 focus:z-10 sm:text-sm transition-colors"
              placeholder="Mot de passe"
            />
          </div>
        </div>

        <!-- Options -->
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember-me"
              name="remember-me"
              type="checkbox"
              class="h-4 w-4 text-light-accent1 dark:text-dark-accent1 focus:ring-light-accent1 dark:focus:ring-dark-accent1 border-light-surface dark:border-dark-surface bg-white dark:bg-dark-background rounded transition-colors"
            />
            <label
              for="remember-me"
              class="ml-2 block text-sm text-light-text dark:text-dark-text"
            >
              Se souvenir de moi
            </label>
          </div>

          <div class="text-sm">
            <a
              href="/forgot-password"
              class="font-medium text-light-accent1 dark:text-dark-accent1 hover:text-light-accent1/80 dark:hover:text-dark-accent1/80 transition-colors"
            >
              Mot de passe oublié ?
            </a>
          </div>
        </div>

        <!-- Messages d'erreur/succès -->
        <div id="message" class="hidden">
          <div
            id="error-message"
            class="hidden bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 text-red-600 dark:text-red-400 px-4 py-3 rounded-xl"
          >
            <p class="text-sm"></p>
          </div>
          <div
            id="success-message"
            class="hidden bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 text-green-600 dark:text-green-400 px-4 py-3 rounded-xl"
          >
            <p class="text-sm"></p>
          </div>
        </div>

        <!-- Bouton de soumission -->
        <div>
          <button
            type="submit"
            id="submit-btn"
            class="group relative w-full flex justify-center py-3 px-6 border border-transparent text-sm font-medium rounded-xl text-white bg-light-accent1 dark:bg-dark-accent1 hover:bg-light-accent1/80 dark:hover:bg-dark-accent1/80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-light-accent1 dark:focus:ring-dark-accent1 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            <span class="absolute left-0 inset-y-0 flex items-center pl-3">
              <svg
                class="h-5 w-5 text-white/80 group-hover:text-white"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                  clip-rule="evenodd"></path>
              </svg>
            </span>
            <span id="btn-text">Se connecter</span>
            <span id="btn-loading" class="hidden">
              <svg
                class="animate-spin h-5 w-5 text-white"
                fill="none"
                viewBox="0 0 24 24"
              >
                <circle
                  class="opacity-25"
                  cx="12"
                  cy="12"
                  r="10"
                  stroke="currentColor"
                  stroke-width="4"></circle>
                <path
                  class="opacity-75"
                  fill="currentColor"
                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                ></path>
              </svg>
            </span>
          </button>
        </div>

        <!-- Séparateur -->
        <div class="mt-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div
                class="w-full border-t border-light-surface dark:border-dark-surface"
              >
              </div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span
                class="px-2 bg-light-background dark:bg-dark-background text-light-textSecondary dark:text-dark-textSecondary"
                >Ou continuez avec</span
              >
            </div>
          </div>

          <!-- Connexions sociales (optionnel) -->
          <div class="mt-6 grid grid-cols-2 gap-3">
            <button
              type="button"
              class="w-full inline-flex justify-center py-3 px-6 border border-light-surface dark:border-dark-surface rounded-xl shadow-sm bg-light-background dark:bg-dark-surface text-sm font-medium text-light-textSecondary dark:text-dark-textSecondary hover:bg-light-surface dark:hover:bg-dark-background transition-colors"
            >
              <svg class="h-5 w-5" viewBox="0 0 24 24">
                <path
                  fill="currentColor"
                  d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
                ></path>
                <path
                  fill="currentColor"
                  d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
                ></path>
                <path
                  fill="currentColor"
                  d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
                ></path>
                <path
                  fill="currentColor"
                  d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
                ></path>
              </svg>
              <span class="ml-2">Google</span>
            </button>

            <button
              type="button"
              class="w-full inline-flex justify-center py-3 px-6 border border-light-surface dark:border-dark-surface rounded-xl shadow-sm bg-light-background dark:bg-dark-surface text-sm font-medium text-light-textSecondary dark:text-dark-textSecondary hover:bg-light-surface dark:hover:bg-dark-background transition-colors"
            >
              <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                <path
                  d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"
                ></path>
              </svg>
              <span class="ml-2">Facebook</span>
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>

  <Footer slot="footer" />
</BaseLayout>

<script>
  import {
    login,
    getCurrentUser,
    isValidEmail,
    isValidPassword,
  } from "../lib/auth";

  document.addEventListener("DOMContentLoaded", async () => {
    // Vérifier si l'utilisateur est déjà connecté
    try {
      const user = await getCurrentUser();
      if (user) {
        // Rediriger vers le dashboard si déjà connecté
        const urlParams = new URLSearchParams(window.location.search);
        const redirect = urlParams.get("redirect") || "/dashboard";
        window.location.href = redirect;
        return;
      }
    } catch (error) {
      // Continuer vers la connexion si erreur
    }
    const form = document.getElementById("login-form") as HTMLFormElement;
    const emailInput = document.getElementById("email") as HTMLInputElement;
    const passwordInput = document.getElementById(
      "password"
    ) as HTMLInputElement;
    const submitBtn = document.getElementById(
      "submit-btn"
    ) as HTMLButtonElement;
    const btnText = document.getElementById("btn-text") as HTMLSpanElement;
    const btnLoading = document.getElementById(
      "btn-loading"
    ) as HTMLSpanElement;
    const errorMessage = document.getElementById(
      "error-message"
    ) as HTMLDivElement;
    const successMessage = document.getElementById(
      "success-message"
    ) as HTMLDivElement;

    // Gestion de la soumission du formulaire
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      const email = emailInput.value.trim();
      const password = passwordInput.value;

      // Validation côté client
      if (!isValidEmail(email)) {
        showError("Veuillez saisir une adresse email valide.");
        return;
      }

      if (!isValidPassword(password)) {
        showError("Le mot de passe doit contenir au moins 8 caractères.");
        return;
      }

      // Affichage du loading
      setLoading(true);
      hideMessages();

      try {
        const result = await login({ email, password });

        if (result.success) {
          showSuccess("Connexion réussie ! Redirection en cours...");

          // Redirection après succès
          setTimeout(() => {
            const urlParams = new URLSearchParams(window.location.search);
            const redirect = urlParams.get("redirect") || "/dashboard";
            window.location.href = redirect;
          }, 1500);
        } else {
          showError(result.error || "Erreur lors de la connexion");
        }
      } catch (error) {
        console.error("Erreur de connexion:", error);
        showError("Une erreur inattendue est survenue. Veuillez réessayer.");
      } finally {
        setLoading(false);
      }
    });

    // Validation en temps réel
    emailInput.addEventListener("blur", () => {
      if (emailInput.value && !isValidEmail(emailInput.value)) {
        emailInput.classList.add("border-red-500", "dark:border-red-400");
      } else {
        emailInput.classList.remove("border-red-500", "dark:border-red-400");
      }
    });

    passwordInput.addEventListener("blur", () => {
      if (passwordInput.value && !isValidPassword(passwordInput.value)) {
        passwordInput.classList.add("border-red-500", "dark:border-red-400");
      } else {
        passwordInput.classList.remove("border-red-500", "dark:border-red-400");
      }
    });

    // Fonctions utilitaires
    function setLoading(loading: boolean) {
      submitBtn.disabled = loading;
      btnText.classList.toggle("hidden", loading);
      btnLoading.classList.toggle("hidden", !loading);
    }

    function showError(message: string) {
      const messageEl = errorMessage.querySelector("p");
      if (messageEl) {
        messageEl.textContent = message;
      }
      errorMessage.classList.remove("hidden");
      successMessage.classList.add("hidden");
      document.getElementById("message")?.classList.remove("hidden");
    }

    function showSuccess(message: string) {
      const messageEl = successMessage.querySelector("p");
      if (messageEl) {
        messageEl.textContent = message;
      }
      successMessage.classList.remove("hidden");
      errorMessage.classList.add("hidden");
      document.getElementById("message")?.classList.remove("hidden");
    }

    function hideMessages() {
      errorMessage.classList.add("hidden");
      successMessage.classList.add("hidden");
      document.getElementById("message")?.classList.add("hidden");
    }
  });
</script>
